# Забираем docker CLI
FROM docker:27-cli AS dockercli

# Качаем docker-compose (под нужную архитектуру)
FROM alpine:3.20 AS getcompose
ARG COMPOSE_VERSION=2.29.7
ARG TARGETARCH
RUN apk add --no-cache curl && \
    case "${TARGETARCH}" in \
      amd64)   ARCH=x86_64 ;; \
      arm64)   ARCH=aarch64 ;; \
      *) echo "unsupported arch: ${TARGETARCH}"; exit 1 ;; \
    esac && \
    curl -L -o /docker-compose \
      "https://github.com/docker/compose/releases/download/v${COMPOSE_VERSION}/docker-compose-linux-${ARCH}" && \
    chmod +x /docker-compose

# Финальный n8n
FROM docker.n8n.io/n8nio/n8n:latest
USER root
ENV DOCKER_CLI_PLUGINS=/usr/local/lib/docker/cli-plugins

# docker CLI
COPY --from=dockercli /usr/local/bin/docker /usr/local/bin/docker

# docker compose plugin
RUN mkdir -p ${DOCKER_CLI_PLUGINS}
COPY --from=getcompose /docker-compose ${DOCKER_CLI_PLUGINS}/docker-compose
RUN chmod +x /usr/local/bin/docker ${DOCKER_CLI_PLUGINS}/docker-compose

USER 0
